@model Marketplace.Admin.ViewModels.SMTPDetailsViewModel

<div class="form-horizontal">
    <h4><b>SMTP Details</b></h4>
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.FromEmail, htmlAttributes: new { @class = "control-label col-md-3" })
        <div class="col-md-7">
            @Html.EditorFor(model => model.FromEmail, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FromEmail, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.FromEmailPassword, htmlAttributes: new { @class = "control-label col-md-3" })
        <div class="col-md-7">
            @if (Model.FromEmailPassword != null)
            {
                Model.FromEmailPassword = null;
                <a id="btnEmailPwdChange">Change Password</a>
                    <div id="emailPwdField">
                        @Html.EditorFor(model => model.FromEmailPassword, new { htmlAttributes = new { @class = "form-control password-field" } })
                        @Html.ValidationMessageFor(model => model.FromEmailPassword, "", new { @class = "text-danger" })
                    </div>
            }
            else
            {
                <div id="emailPwdField" style="display:block;">
                    @Html.EditorFor(model => model.FromEmailPassword, new { htmlAttributes = new { @class = "form-control password-field" } })
                    @Html.ValidationMessageFor(model => model.FromEmailPassword, "", new { @class = "text-danger" })
                </div>
            }
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ToEmails, htmlAttributes: new { @class = "control-label col-md-3" })
        <div class="col-md-7">
            @Html.EditorFor(model => model.ToEmails, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ToEmails, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.SmtpClient, htmlAttributes: new { @class = "control-label col-md-3" })
        <div class="col-md-7">
            @Html.EditorFor(model => model.SmtpClient, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.SmtpClient, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.SmtpPort, htmlAttributes: new { @class = "control-label col-md-3" })
        <div class="col-md-7">
            @Html.EditorFor(model => model.SmtpPort, new { htmlAttributes = new { @class = "form-control port-number" } })
            @Html.ValidationMessageFor(model => model.SmtpPort, "", new { @class = "text-danger" })
        </div>
    </div>

</div>

